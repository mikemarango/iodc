// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using OIDC.IdentityServer.Data;

namespace OIDC.IdentityServer.Migrations
{
    [DbContext(typeof(IdsrvDbContext))]
    [Migration("20180426075039_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571");

            modelBuilder.Entity("OIDC.IdentityServer.Entities.Claim", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("ClaimValue")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("Claims");

                    b.HasIndex("SubjectId");

                    b.ToTable("Claims");

                    b.HasData(
                        new { Id = "d51211d4-48be-11e8-842f-0ed5f89f718b", ClaimType = "role", ClaimValue = "FreeUser", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d512162a-48be-11e8-842f-0ed5f89f718b", ClaimType = "given_name", ClaimValue = "Frank", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d51218be-48be-11e8-842f-0ed5f89f718b", ClaimType = "family_name", ClaimValue = "Underwood", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d5121e5e-48be-11e8-842f-0ed5f89f718b", ClaimType = "address", ClaimValue = "1 Main Road", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d51220c0-48be-11e8-842f-0ed5f89f718b", ClaimType = "subscriptionlevel", ClaimValue = "FreeUser", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d51222e6-48be-11e8-842f-0ed5f89f718b", ClaimType = "country", ClaimValue = "nl", SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7" },
                        new { Id = "d5122516-48be-11e8-842f-0ed5f89f718b", ClaimType = "role", ClaimValue = "PayingUser", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" },
                        new { Id = "d512273c-48be-11e8-842f-0ed5f89f718b", ClaimType = "given_name", ClaimValue = "Claire", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" },
                        new { Id = "d512294e-48be-11e8-842f-0ed5f89f718b", ClaimType = "family_name", ClaimValue = "Underwood", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" },
                        new { Id = "d5122f52-48be-11e8-842f-0ed5f89f718b", ClaimType = "address", ClaimValue = "1 Big Street", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" },
                        new { Id = "d5123222-48be-11e8-842f-0ed5f89f718b", ClaimType = "subscriptionlevel", ClaimValue = "PayingUser", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" },
                        new { Id = "d512345c-48be-11e8-842f-0ed5f89f718b", ClaimType = "country", ClaimValue = "be", SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7" }
                    );
                });

            modelBuilder.Entity("OIDC.IdentityServer.Entities.Login", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id")
                        .HasName("UserLogins");

                    b.HasIndex("SubjectId");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("OIDC.IdentityServer.Entities.User", b =>
                {
                    b.Property<string>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("SubjectId")
                        .HasName("Users");

                    b.ToTable("Users");

                    b.HasData(
                        new { SubjectId = "d860efca-22d9-47fd-8249-791ba61b07c7", IsActive = true, Password = "P@ssw0rd!", Username = "Frank" },
                        new { SubjectId = "b7539694-97e7-4dfe-84da-b4256e1ff5c7", IsActive = true, Password = "P@ssw0rd!", Username = "Claire" }
                    );
                });

            modelBuilder.Entity("OIDC.IdentityServer.Entities.Claim", b =>
                {
                    b.HasOne("OIDC.IdentityServer.Entities.User")
                        .WithMany("Claims")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("OIDC.IdentityServer.Entities.Login", b =>
                {
                    b.HasOne("OIDC.IdentityServer.Entities.User")
                        .WithMany("Logins")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
